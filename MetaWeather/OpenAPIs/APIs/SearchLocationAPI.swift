//
// SearchLocationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

class SearchLocationAPI {
    /**
     Search location by name
     
     - parameter query: (query) String 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    class func searchLocationByName(query: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Location]?,_ error: Error?) -> Void)) {
        searchLocationByNameWithRequestBuilder(query: query).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Search location by name
     - GET /api/location/search/
     - parameter query: (query) String 
     - returns: RequestBuilder<[Location]> 
     */
    class func searchLocationByNameWithRequestBuilder(query: String) -> RequestBuilder<[Location]> {
        let path = "/api/location/search/"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "query": query.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<[Location]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
